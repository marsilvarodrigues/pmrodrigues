name: PMRodrigues Project Setup

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: |
        sudo docker-compose -f infrastructure/docker-compose.yaml up -d
      working-directory: .

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '18'

    - name: Build with Maven
      run: mvn clean package jacoco:report
      working-directory: .

    - name: Collect Junit Report
      run: |
        modules=( "common" "email-service" "security" "users-schema-modules" )
        for module in "${!modules[@]}"; do
          echo "Processing module: $module"
          cd "$module"          
          cp -r target/surefire-reports/ $GITHUB_WORKSPACE/surefire-reports/$module
          cd ..
        done
      working-directory: ${{ github.workspace }}

    - name: Analyze JUnit Results
      run: |
        modules=( "common" "email-service" "security" "users-schema-modules" )
        for module in "${modules[@]}"; do
          echo "Processing module: $module"
          cd "$module"          
          cp -r target/surefire-reports/ $GITHUB_WORKSPACE/surefire-reports/$module
          cd ..
        done
      working-directory: ${{ github.workspace }}

    - name: Create Test Results Chart
      uses: actions/github-script@v5
      with:
        script: |
          const totalTests = parseInt(process.env.total_tests);
          const successfulTests = parseInt(process.env.successful_tests);

          const failedTests = totalTests - successfulTests;

          const chartData = {
            labels: ['Total Tests', 'Successful Tests', 'Failed Tests'],
            datasets: [
              {
                label: 'Test Results',
                data: [totalTests, successfulTests, failedTests],
                backgroundColor: ['#36a2eb', '#4caf50', '#f44336'],
              },
            ],
          };

          const { data } = await octokit.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `![Test Results Chart](https://quickchart.io/chart?c=${encodeURIComponent(JSON.stringify(chartData))})`,
          });
      env:
        total_tests: ${{ steps.test-results.outputs.total_tests }}
        successful_tests: ${{ steps.test-results.outputs.successful_tests }}

    - name: Stop Docker Compose
      run: |
        sudo docker-compose -f infrastructure/docker-compose.yaml down
      working-directory: .

    - name: Clean up Docker
      run: |
        docker system prune -af